[
  {
    "objectID": "lab-03.html",
    "href": "lab-03.html",
    "title": "lab 3: Covid Wrangling",
    "section": "",
    "text": "library(zoo)\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(flextable)\nlibrary(tidyverse)\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ purrr::compose() masks flextable::compose()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(usethis)"
  },
  {
    "objectID": "lab-03.html#initial-packages",
    "href": "lab-03.html#initial-packages",
    "title": "lab 3: Covid Wrangling",
    "section": "",
    "text": "library(zoo)\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(flextable)\nlibrary(tidyverse)\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ purrr::compose() masks flextable::compose()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(usethis)"
  },
  {
    "objectID": "lab-03.html#question-1-2",
    "href": "lab-03.html#question-1-2",
    "title": "lab 3: Covid Wrangling",
    "section": "Question 1 & 2",
    "text": "Question 1 & 2\n\nurl = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv'\ncovid_data = read_csv(url)\n\nRows: 2502832 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): county, state, fips\ndbl  (2): cases, deaths\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\ntxt &lt;- \"2022-02-01\"\nclass(txt)\n\n[1] \"character\"\n\ndate_example &lt;- as.Date(txt)\nclass(date_example)\n\n[1] \"Date\"\n\n\n\nmy.date &lt;- as.Date(\"2021-01-01\")\nmy.state &lt;- \"Colorado\"\n\n\ncolorado &lt;- covid_data |&gt;\n  filter(state == my.state) |&gt;\n  group_by(county) |&gt;\n  arrange(date) |&gt;\n  mutate(new_cases = cases - lag(cases),\n         new_deaths = deaths - lag(deaths)) |&gt;\n  ungroup()\n\n\nfilter(colorado, date == my.date) |&gt;\n  slice_max(cases, n = 5) |&gt;\n  select(Date = date, County = county, Cases = cases) |&gt;\n  flextable() |&gt;\n  set_caption(\"Most Total Cases in Colorado\")\n\nDateCountyCases2021-01-01Denver48,0232021-01-01El Paso41,6282021-01-01Adams40,6962021-01-01Arapahoe38,7912021-01-01Jefferson29,776\n\nfilter(colorado, date == my.date) |&gt;\n  slice_max(cases, n = 5) |&gt;\n  select(Date = date, County = county, Cases = new_cases) |&gt;\n  flextable() |&gt;\n  set_caption(caption = \"Most New Cases in Colorado\")\n\nDateCountyCases2021-01-01Denver3122021-01-01El Paso3032021-01-01Adams3522021-01-01Arapahoe3342021-01-01Jefferson211"
  },
  {
    "objectID": "lab-03.html#question-3",
    "href": "lab-03.html#question-3",
    "title": "lab 3: Covid Wrangling",
    "section": "Question 3",
    "text": "Question 3\n\npop_url &lt;- 'https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv'\n\npop_data &lt;- read_csv(pop_url)\n\nRows: 3195 Columns: 67\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): SUMLEV, STATE, COUNTY, STNAME, CTYNAME\ndbl (62): REGION, DIVISION, ESTIMATESBASE2020, POPESTIMATE2020, POPESTIMATE2...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npop_data |&gt;\n  mutate(fips = paste0(STATE, COUNTY)) -&gt; pop_data_fips\n\npop_data_fips |&gt;\n  filter(COUNTY != \"000\") |&gt;\n  select(contains(\"NAME\"), contains(\"2021\"), contains(\"fips\")) -&gt; final_pop\n\nnames(final_pop)\n\n [1] \"STNAME\"                \"CTYNAME\"               \"POPESTIMATE2021\"      \n [4] \"NPOPCHG2021\"           \"BIRTHS2021\"            \"DEATHS2021\"           \n [7] \"NATURALCHG2021\"        \"INTERNATIONALMIG2021\"  \"DOMESTICMIG2021\"      \n[10] \"NETMIG2021\"            \"RESIDUAL2021\"          \"GQESTIMATES2021\"      \n[13] \"RBIRTH2021\"            \"RDEATH2021\"            \"RNATURALCHG2021\"      \n[16] \"RINTERNATIONALMIG2021\" \"RDOMESTICMIG2021\"      \"RNETMIG2021\"          \n[19] \"fips\"                 \n\nnames(covid_data)\n\n[1] \"date\"   \"county\" \"state\"  \"fips\"   \"cases\"  \"deaths\"\n\n#glimpse(final_pop) just so it doesn't take up a bunch of space\n\nAnswer 3.2\nAfter the modifications, the new data has 3,144 rows and 19 columns. Some of these names include STNAME, CTYNAME, POPESTIMATE2022, and fips. The only column that lines up with our covid data is the newly modified fips column.\n\nPerCap &lt;- inner_join(colorado, select(final_pop, fips, final_pop = POPESTIMATE2021), by = \"fips\") %&gt;% \n  filter(date == my.date) %&gt;%\n  mutate(CumPerCap = cases / final_pop, NewCasesPerCap = new_cases / final_pop, NewDeathsPerCap = new_deaths / final_pop)\n  \n\n\nrange(final_pop$POPESTIMATE2021)\n\n[1]      54 9809462\n\n\nAnswer 3.3\nThe range of the data is 54 to 9,809,462\n\nlibrary(flextable)\nPerCap %&gt;%\n  select(County = county, Cases = CumPerCap) %&gt;%\n  slice_max(Cases, n =5) %&gt;% \n  flextable() %&gt;%\n  set_caption(caption = \"Most Cumulative Cases per Capita\")\n\nCountyCasesCrowley0.28945074Bent0.21090092Logan0.15467009Lincoln0.14306596Fremont0.09507078\n\nPerCap %&gt;%\n  select(County = county, Cases = NewCasesPerCap) %&gt;%\n  slice_max(Cases, n = 5) %&gt;%\n  flextable() %&gt;%\n  set_caption(caption = \"Most New Cases per Capita\")\n\nCountyCasesBent0.016669788Sedgwick0.003439381Chaffee0.002634112Crowley0.002266783Mineral0.002152853"
  },
  {
    "objectID": "lab-03.html#question-4",
    "href": "lab-03.html#question-4",
    "title": "lab 3: Covid Wrangling",
    "section": "Question 4",
    "text": "Question 4\n\nlibrary(tidyverse)\n\njoined_fips &lt;- inner_join(colorado, final_pop, by = \"fips\")\n\nlast_14 &lt;- joined_fips |&gt;\n  filter(between(date, my.date - 13, my.date)) |&gt;\n  group_by(county, POPESTIMATE2021) |&gt;\n  summarise(total_new_cases = sum(new_cases)) |&gt;\n  mutate(cases_per_100k = (total_new_cases / POPESTIMATE2021) * 100000) %&gt;% \n  ungroup()\n\n`summarise()` has grouped output by 'county'. You can override using the\n`.groups` argument.\n\nlast_14 |&gt;\n  slice_max(cases_per_100k, n = 5)\n\n# A tibble: 5 × 4\n  county   POPESTIMATE2021 total_new_cases cases_per_100k\n  &lt;chr&gt;              &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n1 Bent                5339             280          5244.\n2 Crowley             5735              95          1656.\n3 Pitkin             17337             266          1534.\n4 Phillips            4502              68          1510.\n5 Fremont            49237             729          1481.\n\n\nAnswer\nThe top 5 counties with the most new cases per 100k in the last 14 days is Bent, Crowley, Pitkin, Phillips, and Fremont."
  },
  {
    "objectID": "lab-03.html#question-5",
    "href": "lab-03.html#question-5",
    "title": "lab 3: Covid Wrangling",
    "section": "Question 5",
    "text": "Question 5\n\nlibrary(tidyverse)\n\njoined_fips |&gt;\n  mutate(year = year(date)) |&gt;\n  filter(year == 2021) |&gt;\n  select(year, date, county, deaths, DEATHS2021) |&gt;\n  group_by(county, DEATHS2021) |&gt;\n  summarize(deaths_start = sum(deaths[date == as.Date(\"2021-01-01\")], na.rm = TRUE),\n            deaths_end = sum(deaths[date == as.Date(\"2021-12-31\")], na.rm = TRUE)) |&gt;\n  mutate(total_covid_deaths = deaths_end - deaths_start) |&gt;\n  mutate(percentage_covid = (total_covid_deaths / DEATHS2021) * 100) |&gt;\n  select(percentage_covid, county) |&gt;\n  filter(percentage_covid &gt; 20) -&gt; percentage_deaths\n\n`summarise()` has grouped output by 'county'. You can override using the\n`.groups` argument.\n\npercentage_deaths |&gt;\n  ggplot(aes(x = county, \n             y = percentage_covid)) +\n  geom_col(fill = \"blue\") +\n  labs(title = \"Colorado Counties with over 20% of Their 2021 Deaths resulting from COVID-19\",\n       x = \"County\",\n       y = \"Percentage\",\n       subtitle = \"Data Source: NY-Times, US Census\",\n       caption = \"By: Brandon Pizer ESS-330\")"
  },
  {
    "objectID": "lab-03.html#question-6",
    "href": "lab-03.html#question-6",
    "title": "lab 3: Covid Wrangling",
    "section": "Question 6",
    "text": "Question 6\n\nlibrary(zoo)\n\ncovid_data |&gt;\n  group_by(date, state) |&gt;\n  summarise(cases = sum(cases)) |&gt;\n  filter(state %in% c('New York', \"Ohio\", 'Colorado', \"Alabama\")) |&gt;\n  group_by(state) |&gt;\n  mutate(newCases = cases - lag(cases)) |&gt;\n  mutate(roll = rollmean(newCases, k = 7, align = \"right\", fill = NA)) |&gt;\n  ungroup() -&gt; four_states_data\n\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n\nggplot(four_states_data, aes(x = date)) +\n  geom_col(aes(y = newCases), fill = \"lightblue\", col = NA) +\n  geom_line(aes(y = roll), col = \"darkblue\", size = 1) +\n  theme_linedraw() +\n  facet_wrap(~state, nrow = 2, scales = \"free_y\") +\n  labs(title = \"Cumulative Daily COVID-19 Cases\",\n       x = \"Date\",\n       y = \"New Cases\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_col()`).\n\n\nWarning: Removed 7 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\nlibrary(zoo)\n\npop_data |&gt;\n  group_by(STNAME) |&gt;\n  summarise(state_pop = sum(POPESTIMATE2021)) |&gt;\n  inner_join(four_states_data, by  = c(\"STNAME\" = \"state\")) |&gt;\n  mutate(per_capita_new = newCases / state_pop) |&gt;\n  group_by(STNAME) |&gt;\n  mutate(roll = rollmean(per_capita_new, k = 7, align = \"right\", fill = NA)) |&gt;\n  ungroup() -&gt; four_state_scaled\n\nggplot(four_state_scaled, aes(x = date)) +\n  geom_line(aes(y = roll, col = STNAME), size = 1) +\n  theme_classic() +\n  labs(title = \"Cumulative COVID-19 Cases Per Capita\",\n       x = \"Date\",\n       y = \"Cases\",\n       color = \"State\")\n\nWarning: Removed 28 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\nAnswer 6.5\nAlthough the first graph using facet_wrap is easy to look at, it’s not that easy to compare each state (especially when the y-axis do not match). The second graph on the other hand uses a per capita scaling so each state has a somewhat equal representation. It makes Alabama look way worse, by that I mean having more cases, in general compared to graph 1. Alabama has equal footing with New York which has a population almost quadruple the size. To put it simply, scaling represents states on an even playing field, which in turn, is more valuable data."
  },
  {
    "objectID": "lab-03.html#question-7",
    "href": "lab-03.html#question-7",
    "title": "lab 3: Covid Wrangling",
    "section": "Question 7",
    "text": "Question 7\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(maps)\n\nWarning: package 'maps' was built under R version 4.4.3\n\n\n\nAttaching package: 'maps'\n\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlocation_data = read.csv('https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/county-centroids.csv')\n\nmutated_covid &lt;- covid_data |&gt;\n  mutate(fips = as.integer(fips))\n\n# the covid date fips code was registered as a character so I had to convert it to numeric.\n\nlocation_covid &lt;- inner_join(mutated_covid, location_data, by = \"fips\")\n\nlocation_covid |&gt;\n  group_by(date) |&gt;\n  summarise(wmX_c = sum(LON*cases) / sum(cases), wmY_c = sum(LAT*cases) / sum(cases), cases = sum(cases)) |&gt;\n  arrange(date) |&gt;\n  mutate(day = 1:n()) -&gt; space_time\n\nggplot(space_time) +\n  borders(\"state\", fill = \"gray90\", color = \"white\") +\n  geom_point(aes(x = wmX_c, y = wmY_c, size = cases), colour = \"blue\", alpha = .25) +\n  theme_linedraw() +\n  labs(colour = \"day\",\n       size = \"Cases\",\n       title = \"Weighted Center of the COVID-19 Cases in the USA\",\n       x = \"\",\n       y = \"\",\n       subtitle = \"Data Source: NY-Times, CSU ESS-330\",\n       caption = \"By Brandon Pizer 2025\")\n\nWarning: Duplicated aesthetics after name standardisation: colour\n\n\n\n\n\n\n\n\n\nAnswer 7.1\nIt seems that from the data, the COVID-19 virus started more on the west coast as the epicenters are leaning more towards states like Utah and one in Washington. However, as time moves on the east coast gains more cases and the epicenter moves closer to what looks like Illinois and Ohio. Towards the end, the epicenter makes its way back more centrally as most states had numerous cases and ,according to the graph, ends in southern Missouri. This would all makes sense because many of the first states to be infected were west coast states and Illinois. A main driver has to be population because the epicenters are centered around the states that have the most population; examples including California, New York, Illinois, and Texas. Most of these States have dense urban cities that are really good at spreading COVID-19. Population helps explain the epicenters."
  },
  {
    "objectID": "lab-03.html#question-8",
    "href": "lab-03.html#question-8",
    "title": "lab 3: Covid Wrangling",
    "section": "Question 8",
    "text": "Question 8\n\nlibrary(patchwork)\n\nWarning: package 'patchwork' was built under R version 4.4.3\n\nlocation_covid |&gt;\n  group_by(date) |&gt;\n  summarise(wmX_c = sum(LON*cases) / sum(cases), wmY_c = sum(LAT*cases) / sum(cases), wmX_d = sum(LON*deaths) / sum(deaths), wmY_d = sum(LAT*deaths) / sum(deaths), cases = sum(cases), deaths = sum(deaths)) |&gt;\n  arrange(date) |&gt;\n  mutate(day = 1:n()) -&gt; space_time_cd\n\np1 &lt;- ggplot(space_time_cd) +\n  borders(\"state\", fill = \"gray90\", color = \"white\") +\n  geom_point(aes(x = wmX_c, y = wmY_c, size = cases), colour = \"red\", alpha = .25) +\n  theme_linedraw() +\n  labs(colour = \"Time\",\n       size = \"Cases\",\n       title = \"Weighted Center of COVID Cases\",\n       x = \"\",\n       y = \"\",\n       subtitle = \"Data Source: NY-Times, CSU ESS-330\",\n       caption = \"By Brandon Pizer 2025\")\n\nWarning: Duplicated aesthetics after name standardisation: colour\n\np2 &lt;- ggplot(space_time_cd) +\n  borders(\"state\", fill = \"gray90\", color = \"white\") +\n  geom_point(aes(x = wmX_d, y = wmY_d, size = deaths), colour = \"navy\", alpha = .25) +\n  theme_linedraw() +\n  labs(colour = \"Time\",\n       size = \"Deaths\",\n       title = \"Weighted Center of COVID deaths\",\n       x = \"\",\n       y = \"\",\n       subtitle = \"Data Source: NY-Times, CSU ESS-330\",\n       caption = \"By Brandon Pizer 2025\")\n\nWarning: Duplicated aesthetics after name standardisation: colour\n\np1 | p2\n\nWarning: Removed 778 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nAnswer 8.1\nLooking at the two graphs, you can definitely see a correlation between death and case epicenter. It looks like for the most part that the pandemic began in Washington and slowly swept across the country. It would make sense that the places with the most cases would most likely see more deaths as well. My assumption is that the east coast had more deaths, particularly in the New England area which has a large population. This is why the finishing epicenter for the covid deaths is closer to Ohio."
  }
]